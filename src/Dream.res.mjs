// Generated by ReScript, PLEASE EDIT WITH CARE

import Morgan from "morgan";
import * as Webapi__Fetch from "rescript-webapi/src/Webapi/Webapi__Fetch.res.mjs";

function headersToObject(headers) {
  var obj = {};
  if (headers !== undefined) {
    headers.forEach(function (param) {
          obj[param[0]] = param[1];
        });
  }
  return obj;
}

function status(res) {
  return res.status;
}

var $$Response = {
  status: status
};

var method = Webapi__Fetch.$$Request.method_;

function url(prim) {
  return prim.url;
}

var $$Request = {
  method: method,
  url: url
};

function get(path, handler) {
  return {
          TAG: "Get",
          _0: path,
          _1: handler
        };
}

function router(routes) {
  return function (request) {
    var requestMethod = method(request);
    var requestPath = request.url;
    if (typeof requestMethod === "object") {
      return Promise.resolve({
                  status: 404
                });
    }
    if (requestMethod !== "Get") {
      return Promise.resolve({
                  status: 404
                });
    }
    var match = routes.find(function (route) {
          return route._0 === requestPath;
        });
    if (match !== undefined) {
      return match._1(request);
    } else {
      return Promise.resolve({
                  status: 404
                });
    }
  };
}

function json(t) {
  return {
          status: 200,
          json: t
        };
}

function html(e, statusOpt) {
  var status = statusOpt !== undefined ? statusOpt : 200;
  return {
          status: status,
          body: e
        };
}

var Morgan$1 = {};

function logger(string) {
  var log = Morgan(string);
  return function (handler) {
    return function (request) {
      var response = handler(request);
      return response.then(function (res) {
                  log(request, res, (function () {
                          
                        }));
                  return Promise.resolve(res);
                });
    };
  };
}

export {
  headersToObject ,
  $$Response ,
  $$Request ,
  get ,
  router ,
  json ,
  html ,
  Morgan$1 as Morgan,
  logger ,
}
/* morgan Not a pure module */
