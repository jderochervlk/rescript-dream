// Generated by ReScript, PLEASE EDIT WITH CARE

import Express from "express";
import * as Webapi__Fetch from "rescript-webapi/src/Webapi/Webapi__Fetch.res.mjs";

var Status = {};

function get(path, handler) {
  return {
          TAG: "Get",
          _0: path,
          _1: handler
        };
}

function logger(handler) {
  return function (request) {
    console.log("Request received:", "f");
    return handler(request);
  };
}

function router(routes) {
  return function (request) {
    var requestMethod = Webapi__Fetch.$$Request.method_(request);
    var requestPath = request.url;
    if (typeof requestMethod === "object") {
      return Promise.resolve({
                  status: 404
                });
    }
    if (requestMethod !== "Get") {
      return Promise.resolve({
                  status: 404
                });
    }
    var match = routes.find(function (route) {
          return route._0 === requestPath;
        });
    if (match !== undefined) {
      return match._1(request);
    } else {
      return Promise.resolve({
                  status: 404
                });
    }
  };
}

function run(port, handler) {
  var app = Express();
  app.use(function (req, res, next) {
        handler(req).then(function (response) {
              res.append("", "");
              next();
            });
      });
  return app.listen(port, (function (param) {
                console.log("Listening on http://localhost:" + String(port));
              }));
}

var DreamExpress = {
  run: run
};

var t1 = 201;

export {
  Status ,
  t1 ,
  get ,
  logger ,
  router ,
  DreamExpress ,
}
/* express Not a pure module */
