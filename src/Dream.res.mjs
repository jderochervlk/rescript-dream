// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Route from "./Route.res.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as Webapi__Fetch from "rescript-webapi/src/Webapi/Webapi__Fetch.res.mjs";

function headersToObject(headers) {
  var obj = {};
  if (headers !== undefined) {
    headers.forEach(function (param) {
          obj[param[0]] = param[1];
        });
  }
  return obj;
}

function status(res) {
  return res.status;
}

var $$Response = {
  status: status
};

var method = Webapi__Fetch.$$Request.method_;

function url(prim) {
  return prim.url;
}

var $$Request = {
  method: method,
  url: url
};

function get(path, handler) {
  return {
          TAG: "Get",
          _0: Route.make(path),
          _1: handler
        };
}

function router(routes) {
  return function (request, params) {
    var requestMethod = method(request);
    var requestPath = request.url;
    if (typeof requestMethod === "object") {
      return Promise.resolve({
                  status: 404
                });
    }
    if (requestMethod !== "Get") {
      return Promise.resolve({
                  status: 404
                });
    }
    var match = routes.find(function (route) {
          return Core__Option.isSome(route._0(requestPath));
        });
    if (match === undefined) {
      return Promise.resolve({
                  status: 404
                });
    }
    var params$1 = Core__Option.getOr(match._0(requestPath), []);
    return match._1(request, params$1);
  };
}

function json(t) {
  return {
          status: 200,
          json: t
        };
}

function html(e, statusOpt) {
  var status = statusOpt !== undefined ? statusOpt : 200;
  return {
          status: status,
          body: e
        };
}

var Morgan = {};

export {
  headersToObject ,
  $$Response ,
  $$Request ,
  get ,
  router ,
  json ,
  html ,
  Morgan ,
}
/* Route Not a pure module */
